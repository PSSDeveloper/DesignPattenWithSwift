[
    {
        "type": "创建型模式",
        "goal": "该模式关注于对象的创建方式。这些模式帮助系统在创建对象时隐藏对象的创建逻辑，而不是直接实例化对象",
        "contents": [
            {
                "name": "单例模式",
                "desc": "确保一个类只有一个实例，并提供一个全局访问点"
            },
            {
                "name": "工厂方法模式",
                "desc": "确保一个类只有一个实例，并提供一个全局访问点"
            },
            {
                "name": "抽象工厂模式",
                "desc": "确保一个类只有一个实例，并提供一个全局访问点"
            },
            {
                "name": "建造者模式",
                "desc": "确保一个类只有一个实例，并提供一个全局访问点"
            },
            {
                "name": "原型模式",
                "desc": "确保一个类只有一个实例，并提供一个全局访问点"
            }

        ]
    },
    {
        "type": "结构型模式",
        "goal": "该模式关注于类和对象的组合。这些模式通过组合对象实现新的功能，使得设计更加高效灵活。",
        "contents": [
            {
                "name": "适配器模式",
                "desc": "确保一个类只有一个实例，并提供一个全局访问点"
            },
            {
                "name": "桥接模式",
                "desc": "确保一个类只有一个实例，并提供一个全局访问点"
            },
            {
                "name": "组合模式",
                "desc": "确保一个类只有一个实例，并提供一个全局访问点"
            },
            {
                "name": "装饰器模式",
                "desc": "确保一个类只有一个实例，并提供一个全局访问点"
            },
            {
                "name": "外观模式",
                "desc": "确保一个类只有一个实例，并提供一个全局访问点"
            },
            {
                "name": "享元模式",
                "desc": "确保一个类只有一个实例，并提供一个全局访问点"
            },
            {
                "name": "代理模式",
                "desc": "确保一个类只有一个实例，并提供一个全局访问点"
            }
        ]
    },
    {
        "type": "行为型模式",
        "goal":"该模式关注于对象之间的责任分配，以及它们是如何通信和协作的。这些模式处理对象之间的交互和职责分配问题",
        "contents": [
            {
                "name": "职责链模式",
                "desc": "确保一个类只有一个实例，并提供一个全局访问点"
            },
            {
                "name": "命令模式",
                "desc": "确保一个类只有一个实例，并提供一个全局访问点"
            },
            {
                "name": "解释器模式",
                "desc": "确保一个类只有一个实例，并提供一个全局访问点"
            },
            {
                "name": "迭代器模式",
                "desc": "确保一个类只有一个实例，并提供一个全局访问点"
            },
            {
                "name": "中介者模式",
                "desc": "确保一个类只有一个实例，并提供一个全局访问点"
            },
            {
                "name": "备忘录模式",
                "desc": "确保一个类只有一个实例，并提供一个全局访问点"
            },
            {
                "name": "观察者模式",
                "desc": "确保一个类只有一个实例，并提供一个全局访问点"
            },
            {
                "name": "状态模式",
                "desc": "确保一个类只有一个实例，并提供一个全局访问点"
            },
            {
                "name": "策略模式",
                "desc": "确保一个类只有一个实例，并提供一个全局访问点"
            },
            {
                "name": "模板方法模式",
                "desc": "确保一个类只有一个实例，并提供一个全局访问点"
            },
            {
                "name": "访问者模式",
                "desc": "确保一个类只有一个实例，并提供一个全局访问点"
            }
        ]
    }
]
